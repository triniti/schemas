{
  "id": "http://schemas.triniti.io/json-schema/triniti/curator/mixin/carousel-widget/1-0-0.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {
    "_id": {
      "type": "string",
      "pattern": "^[\\w\\/\\.:-]+$",
      "pbj": {
        "type": "identifier",
        "rule": "single",
        "overridable": true
      }
    },
    "status": {
      "type": "string",
      "default": "draft",
      "enum": [
        "unknown",
        "published",
        "scheduled",
        "pending",
        "draft",
        "expired",
        "archived",
        "deleted"
      ],
      "pbj": {
        "type": "string-enum",
        "rule": "single"
      }
    },
    "etag": {
      "type": "string",
      "pattern": "^[\\w\\.:-]+$",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "created_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$",
      "pbj": {
        "type": "microtime",
        "rule": "single"
      }
    },
    "creator_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A fully qualified reference to what created this node. This is intentionally a message-ref and not a user id because it is often a program that creates nodes, not a user.",
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "updated_at": {
      "type": "string",
      "pattern": "^[1-9]{1}[0-9]{12,15}$",
      "pbj": {
        "type": "microtime",
        "rule": "single",
        "useTypeDefault": false
      }
    },
    "updater_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A fully qualified reference to what updated this node. This is intentionally a message-ref and not a user id because it is often a program that updates nodes, not a user. E.g. \"acme:iam:node:app:cli-scheduler\" or \"acme:iam:node:user:60c71df0-fda8-11e5-bfb9-30342d363854\"",
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "last_event_ref": {
      "type": "object",
      "properties": {
        "curie": {
          "type": "string",
          "pattern": "^([a-z0-9-]+):([a-z0-9\\.-]+):([a-z0-9-]+)?:([a-z0-9-]+)$",
          "minLength": 0,
          "maxLength": 146
        },
        "id": {
          "type": "string",
          "pattern": "^[A-Za-z0-9:_\\-]+$",
          "minLength": 0,
          "maxLength": 255
        },
        "tag": {
          "type": "string",
          "pattern": "^([\\w\\/-]|[\\w-][\\w\\/-]*[\\w-])$",
          "minLength": 0,
          "maxLength": 255
        }
      },
      "required": [
        "curie",
        "id"
      ],
      "additionalProperties": false,
      "description": "A reference to the last event that changed the state of this node. E.g. \"acme:blog:event:article-published:60c71df0-fda8-11e5-bfb9-30342d363854\"",
      "pbj": {
        "type": "message-ref",
        "rule": "single"
      }
    },
    "title": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "search_request": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "#/definitions/search-nodes-request"
        }
      ],
      "pbj": {
        "type": "message",
        "rule": "single"
      }
    },
    "view_all_link_url": {
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "description": "The href/url for the view all option.",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "url"
      }
    },
    "view_all_link_text": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "The label for the view all option.",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "header_text": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "The text to be rendered in the header.",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "header_button_link_url": {
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "description": "The href/url for the header button.",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "url"
      }
    },
    "header_button_link_text": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "The label to be rendered in the header button.",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "show_header": {
      "type": "boolean",
      "description": "Whether or not to render the header.",
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "footer_text": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "The text to be rendered in the footer.",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "footer_button_link_url": {
      "type": "string",
      "pattern": "^(https?:\\/\\/)?([\\da-z\\.-]+)\\.([a-z\\.]{2,6})([\\/\\w \\.-]*)*\\/?$",
      "description": "The href/url for the footer button.",
      "pbj": {
        "type": "string",
        "rule": "single",
        "format": "url"
      }
    },
    "footer_button_link_text": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "description": "The label to be rendered in the footer button.",
      "pbj": {
        "type": "string",
        "rule": "single"
      }
    },
    "show_footer": {
      "type": "boolean",
      "description": "Whether or not to render the footer.",
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "show_captions": {
      "type": "boolean",
      "default": true,
      "description": "Whether or not the widget should render with captions.",
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "show_controls": {
      "type": "boolean",
      "default": true,
      "description": "Whether or not the widget should render with controls (e.g. arrows).",
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    },
    "show_position_indicators": {
      "type": "boolean",
      "default": true,
      "description": "Whether or not the widget should render with position indicators (e.g. dots).",
      "pbj": {
        "type": "boolean",
        "rule": "single"
      }
    }
  },
  "required": [
    "_id"
  ],
  "definitions": {
    "search-nodes-request": {
      "type": "object",
      "anyOf": [
        {
          "$ref": "http://schemas.triniti.io/json-schema/gdbots/ncr/mixin/search-nodes-request/1-0-0.json#"
        },
        {
          "$ref": "http://schemas.triniti.io/json-schema/gdbots/ncr/mixin/search-nodes-request/1-0-1.json#"
        }
      ]
    }
  },
  "additionalProperties": true
}