<?xml version="1.0" encoding="UTF-8" ?>
<pbj-schema xmlns="http://gdbots.io/pbj/xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://gdbots.io/pbj/xsd http://gdbots.io/pbj/xsd/schema.xsd">

  <schema id="pbj:triniti:news:mixin:article:1-0-0" mixin="true" extends="gdbots:ncr:mixin:node:v1">
    <fields>
      <field name="_id" type="identifier" required="true" overridable="true">
        <php-options>
          <imports>use Triniti\Schemas\News\ArticleId;</imports>
          <class-name>ArticleId::class</class-name>
          <default>function() { return ArticleId::generate(); }</default>
        </php-options>
        <js-options>
          <imports>import ArticleId from '@triniti/schemas/triniti/news/ArticleId';</imports>
          <class-proto>ArticleId</class-proto>
          <default>() => ArticleId.generate()</default>
        </js-options>
      </field>
      <field name="is_homepage_news" type="boolean">
        <default>true</default>
      </field>
      <field name="allow_comments" type="boolean">
        <default>true</default>
      </field>
      <field name="image_ref" type="identifier">
        <description>
          A reference to the image asset to use for widgets, sharing, seo.
        </description>
        <php-options>
          <imports>use Gdbots\Schemas\Ncr\NodeRef;</imports>
          <class-name>NodeRef::class</class-name>
        </php-options>
        <js-options>
          <imports>import NodeRef from '@gdbots/schemas/gdbots/ncr/NodeRef';</imports>
          <class-proto>NodeRef</class-proto>
        </js-options>
      </field>
      <field name="description" type="text" max="5000">
        <description>
          A description of the article (usually a few sentences). It should typically
          not have HTML as it is used in metadata, feeds, SERP and social.
        </description>
      </field>
      <field name="swipe" type="string">
        <description>
          A swipe (aka banner/label/overlay) is a short string used in a visual treatment
          on the article. e.g. "Exclusive", "NSFW", "Breaking Bad Mojo".
        </description>
      </field>
      <field name="classification" type="string" format="slug">
        <description>
          An arbitrary classification that can be used to establish importance/rank/weight/etc.
          with a human friendly label. e.g. "super-hero", "hero", "chud".
        </description>
      </field>
      <field name="amp_enabled" type="boolean">
        <description>
          Determines if AMP (Accelerated Mobile Pages) should be enabled for this article.
        </description>
        <default>true</default>
      </field>
      <field name="show_related_articles" type="boolean">
        <description>
          Determines if the related articles should render. This is intended as a flag
          on blogroll/lists, not the permalink of an article where you'd always expect
          to see the related articles.
        </description>
      </field>
      <field name="related_articles_heading" type="string"/>
      <field name="related_articles" type="identifier" rule="list">
        <php-options>
          <imports>use Gdbots\Schemas\Ncr\NodeRef;</imports>
          <class-name>NodeRef::class</class-name>
        </php-options>
        <js-options>
          <imports>import NodeRef from '@gdbots/schemas/gdbots/ncr/NodeRef';</imports>
          <class-proto>NodeRef</class-proto>
        </js-options>
      </field>
    </fields>

    <php-options>
      <insertion-points>
        <imports/>
        <methods>
          <![CDATA[
/**
 * @return array
 */
public function getUriTemplateVars()
{
    return [
        '_id' => (string)$this->get('_id'),
        'slug' => $this->get('slug'),
    ];
}
          ]]>
        </methods>
      </insertion-points>
    </php-options>

    <js-options>
      <insertion-points>
        <methods>
          <![CDATA[
/**
 * @returns {Object}
 */
getUriTemplateVars() {
  return {
    _id: `${this.get('_id', '')}`,
    slug: this.get('slug'),
  };
}
          ]]>
        </methods>
      </insertion-points>
    </js-options>
  </schema>
</pbj-schema>
