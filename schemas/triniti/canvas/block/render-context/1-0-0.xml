<?xml version="1.0" encoding="UTF-8" ?>
<pbj-schema xmlns="http://gdbots.io/pbj/xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://gdbots.io/pbj/xsd http://gdbots.io/pbj/xsd/schema.xsd">

  <schema id="pbj:triniti:canvas:block:render-context:1-0-0">
    <fields>
      <field name="container" type="message">
        <description>
          The message (e.g. article) containing the blocks that are
          being rendered. This is used by some block renderers when
          it needs data from the container or to generate urls.
        </description>
      </field>
      <field name="platform" type="string" format="slug">
        <description>
          The platform the blocks are being rendered into, e.g.
          web, amp, apple-news, facebook-instant-articles.
        </description>
        <default>web</default>
      </field>
      <field name="device_view" type="string" format="slug"/>
      <field name="section" type="string" pattern="^[\w-]+$">
        <description>
          Refers to the location on the screen or application that
          the blocks are being rendered into, e.g. "article-detail",
          "blogroll", "modal", "jumbotron".  Renderers can use this
          to customize the output.
        </description>
      </field>
    </fields>

    <php-options>
      <insertion-points>
        <imports>
          <![CDATA[
use Gdbots\Pbj\MessageRef;
            ]]>
        </imports>
        <methods>
          <![CDATA[
/**
 * @param string $tag
 * @return MessageRef
 */
public function generateMessageRef($tag = null)
{
    return new MessageRef(static::schema()->getCurie(), $this->generateEtag(), $tag);
}

/**
 * @return array
 */
public function getUriTemplateVars()
{
    return [];
}
          ]]>
        </methods>
      </insertion-points>
    </php-options>

    <js-options>
      <imports>
        <![CDATA[
import MessageRef from '@gdbots/pbj/MessageRef';
            ]]>
      </imports>
      <insertion-options>
        <methods>
          <![CDATA[
/**
 * @param {?string} tag
 * @returns {MessageRef}
 */
generateMessageRef(tag = null) {
  return new MessageRef(this.schema().getCurie(), this.generateEtag(), tag);
}

/**
 * @returns {Object}
 */
getUriTemplateVars() {
  return {};
}
          ]]>
        </methods>
      </insertion-options>
    </js-options>
  </schema>
</pbj-schema>
