<?xml version="1.0" encoding="UTF-8" ?>
<pbj-schema xmlns="http://gdbots.io/pbj/xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://gdbots.io/pbj/xsd http://gdbots.io/pbj/xsd/schema.xsd">

  <schema id="pbj:triniti:notify::notifier-result:1-0-0">
    <fields>
      <field name="ok" type="boolean">
        <default>true</default>
      </field>
      <field name="code" type="small-int">
        <default>0</default>
      </field>
      <field name="error_name" type="string" pattern="^[\w\/\.:-]+$"/>
      <field name="error_message" type="text"/>
      <field name="error_message" type="text"/>
      <field name="apple_news_article_id" type="text"/>
      <field name="apple_news_share_url" type="text" format="url"/>
      <field name="apple_news_revision_token" type="text"/>
      <field name="raw_response" type="text">
        <description>
          When a notification is sent the platform/vendor often responds with a payload
          that describes the result. This field should contain a (de)serializable
          string, JSON is preferred.
        </description>
      </field>
    </fields>

    <mixins>
      <curie-major>gdbots:common:mixin:taggable:v1</curie-major>
    </mixins>

    <php-options>
      <insertion-points>
        <imports>
          <![CDATA[
use Gdbots\Pbj\MessageRef;
            ]]>
        </imports>
        <methods>
          <![CDATA[
/**
 * @param string $tag
 * @return MessageRef
 */
public function generateMessageRef($tag = null)
{
    return new MessageRef(static::schema()->getCurie(), $this->generateEtag(), $tag);
}

/**
 * @return array
 */
public function getUriTemplateVars()
{
    return [];
}
          ]]>
        </methods>
      </insertion-points>
    </php-options>

    <js-options>
      <insertion-points>
        <imports>
          <![CDATA[
import MessageRef from '@gdbots/pbj/MessageRef';
            ]]>
        </imports>
        <methods>
          <![CDATA[
/**
 * @param {?string} tag
 * @returns {MessageRef}
 */
generateMessageRef(tag = null) {
  return new MessageRef(this.schema().getCurie(), this.generateEtag(), tag);
}

/**
 * @returns {Object}
 */
getUriTemplateVars() {
  return {};
}
          ]]>
        </methods>
      </insertion-points>
    </js-options>
  </schema>
</pbj-schema>
