<?xml version="1.0" encoding="UTF-8" ?>
<pbj-schema xmlns="http://gdbots.io/pbj/xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://gdbots.io/pbj/xsd http://gdbots.io/pbj/xsd/schema.xsd">

  <schema id="pbj:triniti:notify:mixin:browser-notification:1-0-3" mixin="true"
      extends="triniti:notify:mixin:notification:v1">
    <fields>
      <field name="fcm_topics" type="string" pattern="^[\w\/\.:~%#-]+$" rule="set">
        <description>
          @link https://firebase.google.com/docs/cloud-messaging/ios/topic-messaging
          FCM topic messaging allows you to send a message to multiple devices that have opted in to a particular topic.
        </description>
      </field>
      <field name="require_interaction" type="boolean">
        <description>
          @link https://developer.mozilla.org/en-US/docs/Web/API/notification/Notification
          Sets the requireInteraction option on a Notification that indicates that a notification
          should remain active until the user clicks or dismisses it, rather than closing automatically.
        </description>
        <default>true</default>
      </field>
      <field name="braze_campaign_id" type="uuid" use-type-default="false">
        <description>
          The Braze campaign identifier is required if you wish to track campaign stats.
        </description>
      </field>
      <field name="braze_segment_id" type="uuid" use-type-default="false">
        <description>
          The Braze segment identifier that defines the target user segment for the message.
        </description>
      </field>
      <field name="braze_message_variation_id" type="string">
        <description>
          The Braze message variation identifier is used when providing a campaign_id to specify which message variation
          this message should be tracked under (must be an Kindle/FireOS Push Message)
        </description>
      </field>
    </fields>

    <php-options>
      <insertion-points>
        <imports/>
        <methods>
          <![CDATA[
public function getUriTemplateVars(): array
{
    return [
        '_id' => $this->fget('_id'),
    ];
}
          ]]>
        </methods>
      </insertion-points>
    </php-options>

    <js-options>
      <insertion-points>
        <methods>
          <![CDATA[
/**
 * @returns {Object}
 */
getUriTemplateVars() {
  return {
    _id: `${this.get('_id', '')}`,
  };
}
          ]]>
        </methods>
      </insertion-points>
    </js-options>
  </schema>
</pbj-schema>
