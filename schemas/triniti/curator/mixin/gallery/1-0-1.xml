<?xml version="1.0" encoding="UTF-8" ?>
<pbj-schema xmlns="http://gdbots.io/pbj/xsd"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://gdbots.io/pbj/xsd http://gdbots.io/pbj/xsd/schema.xsd">

  <schema id="pbj:triniti:curator:mixin:gallery:1-0-1" mixin="true" extends="gdbots:ncr:mixin:node:v1">
    <fields>
      <field name="image_ref" type="node-ref">
        <description>A reference to the image asset to use as the cover/primary.</description>
      </field>
      <field name="credit" type="string">
        <description>
          A credit is a short string used to publicly acknowledge the source/creator
          of the contents of this gallery. e.g. "Fox News", "CNN".
        </description>
      </field>
      <field name="allow_comments" type="boolean">
        <default>true</default>
      </field>
      <field name="launch_text" type="string"/>
      <field name="description" type="text" max="5000">
        <description>
          A description of the gallery (usually a few sentences). It should typically
          not have HTML as it is used in metadata, feeds, SERP and social.
        </description>
      </field>
      <field name="image_count" type="medium-int"/>
      <field name="prev_gallery_ref" type="node-ref">
        <description>A reference to the previous gallery.</description>
      </field>
      <field name="next_gallery_ref" type="node-ref">
        <description>A reference to the next gallery.</description>
      </field>
      <field name="related_gallery_refs" type="node-ref" rule="list"/>
    </fields>

    <php-options>
      <insertion-points>
        <imports/>
        <methods>
          <![CDATA[
public function getUriTemplateVars(): array
{
    return [
        '_id' => (string)$this->get('_id'),
        'slug' => $this->get('slug'),
    ];
}
          ]]>
        </methods>
      </insertion-points>
    </php-options>

    <js-options>
      <insertion-points>
        <methods>
          <![CDATA[
/**
 * @returns {Object}
 */
getUriTemplateVars() {
  return {
    _id: `${this.get('_id', '')}`,
    slug: this.get('slug'),
  };
}
          ]]>
        </methods>
      </insertion-points>
    </js-options>
  </schema>
</pbj-schema>
